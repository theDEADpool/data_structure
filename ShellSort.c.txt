/*希尔排序
前言：
数据序列1： 13-17-20-42-28 利用插入排序，13-17-20-28-42. Number of swap:1;
数据序列2： 13-17-20-42-14 利用插入排序，13-14-17-20-42. Number of swap:3;
如果数据序列基本有序，使用插入排序会更加高效。
基本思想：
在要排序的一组数中，根据某一增量分为若干子序列，并对子序列分别进行插入排序。
然后逐渐将增量减小,并重复上述过程。直至增量为1,此时数据序列基本有序,最后进行插入排序。
平均时间复杂度：O(n1到2之间方)
*/
#include<stdio.h>

void ShellSort(int arr[], int len)
{
	int tmp = 0;
	int incre = len;
	int k,i,j;
	
	while(true)
	{
		incre = incre/2;
		for(k=0; k<incre; k++) //根据增量分为若干子序列
		{
			for(i=k+incre; i<len; i+=incre)
			{
				for(j=i; j>k; j-=incre)
				{
					if(arr[j]<arr[j-incre])
					{
						tmp=arr[j-incre];
						arr[j-incre]=arr[j];
						arr[j]=tmp;
					}
					else
					{
						break;
					}
				}
			}
		}
		if(incre == 1)
		{
			break;
		}
	}
}

int main()
{
	int arr[]={42,20,17,13,28,14,23,15};
	int len = sizeof(arr)/sizeof(int);
	int i;
	ShellSort(arr,len);
	for(i=0; i<len; i++)
    {
        printf("arr[%d]=%d\n",i, arr[i]);
    }
	return 0;
}